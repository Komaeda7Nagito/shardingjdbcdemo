# \u5141\u8BB8\u5728\u5E94\u7528\u7A0B\u5E8F\u4E0A\u4E0B\u6587\u4E2D\u8986\u76D6\uFF08override\uFF09\u76F8\u540C\u540D\u79F0\u7684 bean \u5B9A\u4E49\u3002
spring.main.allow-bean-definition-overriding=true

# \u6307\u5B9A\u5206\u5E93\u5206\u8868\u7684\u6570\u636E\u6E90
spring.shardingsphere.datasource.names=m1

# \u914D\u7F6E\u5206\u5E93\u5206\u8868\u7684\u6570\u636E\u6E90\u4FE1\u606F
spring.shardingsphere.datasource.m1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m1.url=jdbc:mysql://localhost:3306/course_db?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf-8&useSSL=false
spring.shardingsphere.datasource.m1.username=root
spring.shardingsphere.datasource.m1.password=1234


# \u6307\u5B9A\u5206\u5E93\u5206\u8868\u7684\u89C4\u5219
spring.shardingsphere.sharding.tables.course.actual-data-nodes=m1.course_$->{1..2}
# \u6307\u5B9A\u5206\u5E93\u5206\u8868\u7684\u4E3B\u952E
spring.shardingsphere.sharding.tables.course.key-generator.column=cid
# \u6307\u5B9A\u4E3B\u952E\u751F\u6210\u7B56\u7565
spring.shardingsphere.sharding.tables.course.key-generator.type=SNOWFLAKE
# \u6307\u5B9A\u5206\u7247\u7B56\u7565
spring.shardingsphere.sharding.tables.course.table-strategy.inline.sharding-column=cid
# \u6307\u5B9A\u5206\u7247\u7B97\u6CD5
spring.shardingsphere.sharding.tables.course.table-strategy.inline.algorithm-expression=course_$->{cid % 2 + 1}

# \u663E\u793ASQL
spring.shardingsphere.props.sql.show=true




